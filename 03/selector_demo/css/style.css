/* Base theme */
:root {
  --bg: #0f172a; /* slate-900 */
  --surface: #111827; /* gray-900 */
  --muted: #374151; /* gray-700 */
  --text: #e5e7eb; /* gray-200 */
  --accent: #22d3ee; /* cyan-400 */
  --accent-2: #a78bfa; /* violet-400 */
  --good: #34d399; /* emerald-400 */
  --warn: #fbbf24; /* amber-400 */
  --danger: #f87171; /* red-400 */
}

* {
  box-sizing: border-box;
}

html,
body {
  margin: 0;
  padding: 0;
  background: radial-gradient(
    80rem 80rem at 10% -20%,
    #1f2937 0%,
    var(--bg) 60%
  );
  color: var(--text);
  font: 16px/1.5 system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell,
    "Helvetica Neue", Arial, "Noto Sans", sans-serif;
}

header {
  padding: 2rem 1rem 1rem;
  text-align: center;
}

h1 {
  margin: 0 0 0.25rem 0;
  font-size: 2rem;
}

header p {
  color: #cbd5e1;
  margin: 0.25rem 0 1rem;
}

nav {
  display: flex;
  gap: 0.5rem;
  justify-content: center;
  flex-wrap: wrap;
}
nav a {
  color: var(--text);
  text-decoration: none;
  background: #1f2937;
  border: 1px solid #334155;
  padding: 0.4rem 0.7rem;
  border-radius: 999px;
}
nav a:hover {
  background: #0b1220;
  border-color: var(--accent);
  color: var(--accent);
}

main {
  max-width: 1000px;
  margin: 0 auto;
  padding: 1rem;
  display: grid;
  gap: 1rem;
}

.card {
  background: linear-gradient(
    180deg,
    rgba(31, 41, 55, 0.6),
    rgba(17, 24, 39, 0.8)
  );
  border: 1px solid #334155;
  border-radius: 12px;
  padding: 1rem;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.25);
}

h2 {
  margin-top: 0;
  color: var(--accent-2);
}

/* Basics */
p {
  margin: 0.25rem 0;
}

.note {
  color: var(--good);
}

#unique {
  color: var(--warn);
  font-weight: 700;
}

[data-kind="universal"] {
  border: 1px dashed #64748b;
  padding: 0.5rem;
  border-radius: 8px;
}

/* Combinators */
.container {
  border: 1px solid #334155;
  padding: 0.75rem;
  border-radius: 8px;
  background: #0b1220;
}

.container p {
  color: #d1fae5;
}

.container > .child {
  background: #111827;
  border-left: 4px solid var(--accent);
  padding: 0.5rem;
  margin: 0.5rem 0;
}

.sibling-a + .sibling-b {
  background: rgba(34, 211, 238, 0.1);
  border: 1px solid var(--accent);
  padding: 0.25rem 0.5rem;
  border-radius: 6px;
}

.sibling-a ~ .sibling-c {
  outline: 2px dashed var(--accent-2);
  padding: 0.25rem;
}

/* Attribute selectors */
.links a[target] {
  color: var(--accent);
}
.links a[href^="mailto:"] {
  color: var(--good);
}
.links a[href$=".pdf"] {
  color: var(--danger);
}
.links a[href*="select"] {
  text-decoration: underline wavy var(--accent-2);
}

.attr-form {
  display: grid;
  gap: 0.5rem;
  margin-top: 0.75rem;
}
.attr-form input {
  background: #0b1220;
  color: var(--text);
  border: 1px solid #334155;
  border-radius: 8px;
  padding: 0.5rem 0.65rem;
}
.attr-form input[type="email"] {
  border-color: var(--accent-2);
}
.attr-form input[type="text"][data-role~="primary"] {
  border-color: var(--good);
  box-shadow: 0 0 0 3px rgba(52, 211, 153, 0.15);
}

/* Pseudo-classes */
.state-list {
  display: grid;
  gap: 0.5rem;
  padding-left: 1rem;
}
.state-list a:link {
  color: #93c5fd;
}
.state-list a:visited {
  color: #c4b5fd;
}
.state-list a:hover {
  color: var(--accent);
}
.state-list button:focus {
  outline: 3px solid var(--accent);
  outline-offset: 2px;
}
.state-list input:checked + label {
  color: var(--good);
  font-weight: 700;
}
.state-list .enabled-item button:enabled {
  border: 1px solid var(--good);
}
.state-list .enabled-item button:disabled {
  opacity: 0.4;
  cursor: not-allowed;
}

/* Nth & structural */
.zebra {
  list-style: none;
  padding-left: 0;
  margin: 0.5rem 0;
  border: 1px solid #334155;
  border-radius: 8px;
  overflow: hidden;
}
.zebra li {
  padding: 0.5rem 0.75rem;
}
.zebra li:nth-child(odd) {
  background: #0b1220;
}
.zebra li:nth-child(even) {
  background: #111827;
}
.zebra li:nth-child(3n) {
  color: var(--accent-2);
}

.structure p:first-child {
  color: var(--good);
}
.structure p:last-child {
  color: var(--danger);
}
.structure p.only:only-child {
  display: block;
  color: var(--warn);
}

/* Pseudo-elements */
.fancy-before::before {
  content: "::before → ";
  color: var(--accent);
}
.fancy-after::after {
  content: " ← ::after";
  color: var(--accent-2);
}
.highlight-first-line::first-line {
  color: #fde68a;
  text-transform: uppercase;
  letter-spacing: 0.03em;
}
.highlight-first-letter::first-letter {
  font-size: 200%;
  color: var(--danger);
}

/* Modern selectors */
.tag {
  border: 1px solid #334155;
  background: #0b1220;
  color: var(--text);
  padding: 0.35rem 0.65rem;
  border-radius: 999px;
  cursor: pointer;
}
.tag.primary {
  border-color: var(--good);
}
.tag.danger {
  border-color: var(--danger);
}
.tag[data-active] {
  background: linear-gradient(
    90deg,
    rgba(34, 211, 238, 0.18),
    rgba(167, 139, 250, 0.18)
  );
}

/* :not() to negate a class */
.negation-demo:not(.exclude) {
  background: rgba(52, 211, 153, 0.12);
  border-left: 4px solid var(--good);
  padding: 0.5rem;
  border-radius: 6px;
}

/* :is() to simplify complex selectors */
:is(.tags .tag.primary, .tags .tag.danger):hover {
  filter: brightness(1.15);
}

/* :where() similar to :is() but zero specificity */
.where-demo :where(button, a) {
  outline-offset: 0;
}

/* :has() parent selector (supported in modern browsers) */
.gallery:has(.featured) {
  border: 1px solid var(--accent);
  border-radius: 10px;
  padding: 0.5rem;
  margin-top: 0.5rem;
}
.gallery {
  display: grid;
  grid-template-columns: repeat(3, minmax(0, 1fr));
  gap: 0.5rem;
}
.gallery .tile {
  background: #0b1220;
  border: 1px solid #1f2937;
  border-radius: 8px;
  overflow: hidden;
}
.gallery .tile.featured {
  outline: 2px solid var(--accent);
}
.gallery .tile img {
  display: block;
  width: 100%;
  height: auto;
}
.gallery .tile figcaption {
  padding: 0.4rem 0.5rem;
  color: #cbd5e1;
  font-size: 0.9rem;
}

/* Universal selector example - give all direct children of main a subtle border */
main > * {
  border-color: #273244;
}

/* Small screen tweaks */
@media (max-width: 640px) {
  nav {
    gap: 0.35rem;
  }
  .gallery {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}
